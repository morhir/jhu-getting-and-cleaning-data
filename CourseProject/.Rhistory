type <- 'train'
x[type] = 'c'
x
type <- 'test'
fileName <- paste('X', type, sep = '_')
fileName <- paste(dataDir, type, fileName, sep = '/')
X <- read.table(fileName, col.names = colNames)
type <- 'test'
fileName <- paste('X', type, sep = '_')
fileName <- paste('X', 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
X <- read.table(fileName, col.names = colNames)
type <- 'test'
fileName <- paste('X', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
X <- read.table(fileName, col.names = colNames)
type <- 'test'
fileName <- paste('X', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
X <- read.table(fileName)
fileName <- paste('Y', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
Y <- read.table(fileName)
fileName <- paste('subject', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
subject <- read.table(fileName)
?transpose
dim(aperm(features$NAME))
dim(aperm(features$NAME[]))
dim(features$NAME[])
dim(features$NAME)
features$NAME
levels(features$NAME)
as.array(features$NAME)
aperm(as.array(features$NAME))
array(1:length(features$NAME))
x <- array(1:length(features$NAME))
y <- as.array(features$NAME)
dim(y)
fileName <- paste('X', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- as.array(features$NAME)
X <- read.table(fileName)
fileName <- paste('X', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- as.array(features$NAME)
X <- read.table(fileName, col.names = colNames)
str(X)
#activity
fileName <- paste('Y', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- "acivityID"
Y <- read.table(fileName, col.names = colNames)
#subject
fileName <- paste('subject', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- "subject"
subject <- read.table(fileName, col.names = colNames)
data <- cbind(subject, Y, X)
type <- 'train'
#activity
fileName <- paste('Y', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- "acivityID"
Y <- read.table(fileName, col.names = colNames)
#subject
fileName <- paste('subject', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- "subject"
subject <- read.table(fileName, col.names = colNames)
fileName <- paste('X', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- as.array(features$NAME)
X <- read.table(fileName, col.names = colNames)
data_train <- cbind(subject, Y, X)
data_test <- data
data <- rbind(data_test, data_train)
features
grep('Mean', "angle(Z,gravityMean)")
grep('mean', "angle(Z,gravityMean)")
grep('%Mean%', "angle(Z,gravityMean)")
features$ID[grep('Mean', features$NAME) = 1]
features$ID[grep('Mean', features$NAME) == 1]
lapply(features$NAME, grep('Mean'))
lapply(features$NAME, grep('Mean', features$NAME))
lapply(features$NAME, grep
)
lapply(features$NAME, grep(X[[I]]))
lapply(features$NAME, grep(features$NAME)
)
lapply(features$NAME, grep('mean', features$NAME))
lapply(features$NAME, f <- grep('mean', x))
lapply(features$NAME, f <- function{grep('mean', x)})
lapply(features$NAME, f <- function(x){grep('mean', x)})
apply(features$NAME, f <- function(x){grep('mean', x)})
dapply(features$NAME, f <- function(x){grep('mean', x)})
tapply(features$NAME, f <- function(x){grep('mean', x)})
?apply(features$NAME, f <- function(x){grep('mean', x)})
sapply(features$NAME, f <- function(x){grep('mean', x)})
sapply(features$NAME, f <- function(x){grep('Mean', x)})
sapply(features$NAME, f <- function(x){grep('Mean', x)}) == 1
sapply(features$NAME, f <- function(x){grep('mean()', x)}) == 1
!is.na(sapply(features$NAME, f <- function(x){grep('mean()', x)}) == 1)
!is.na(sapply(features$NAME, f <- function(x){grep('mean()', x)}) == 1) or
!is.na(sapply(features$NAME, f <- function(x){grep('mean()', x)}) == 1) | !is.na(sapply(features$NAME, f <- function(x){grep('std()', x)}) == 1)
features$ID[!is.na(sapply(features$NAME, f <- function(x){grep('mean()', x)}) == 1) | !is.na(sapply(features$NAME, f <- function(x){grep('std()', x)}) == 1)]
cols <- features$ID[!is.na(sapply(features$NAME, f <- function(x){grep('mean()', x)}) == 1) | !is.na(sapply(features$NAME, f <- function(x){grep('std()', x)}) == 1)]
x <- data_train[cols]
condition1 <- sapply(features$NAME, f <- function(x){grep('mean()', x)}) == 1
condition2 <- sapply(features$NAME, f <- function(x){grep('std()', x)}) == 1
features[!is.na(condition1) | !is.na(condition2), ]
condition1 <- sapply(features$NAME, f <- function(x){grep('-mean()', x)}) == 1
condition2 <- sapply(features$NAME, f <- function(x){grep('std()', x)}) == 1
features[!is.na(condition1) | !is.na(condition2), ]
condition1 <- sapply(features$NAME, f <- function(x){grep('mean()', x, fixed = TRUE)}) == 1
condition2 <- sapply(features$NAME, f <- function(x){grep('std()', x)}) == 1
features[!is.na(condition1) | !is.na(condition2), ]
condition1 <- sapply(features$NAME, f <- function(x){grep('mean()', x, fixed = TRUE)}) == 1
condition2 <- sapply(features$NAME, f <- function(x){grep('std()', x, fixed = TRUE)}) == 1
features[!is.na(condition1) | !is.na(condition2), ]
condition1 <- sapply(features$NAME,
f <- function(x){grep('-mean()', x, fixed = TRUE)})
== 1
condition2 <- sapply(features$NAME,
f <- function(x){grep('std()', x, fixed = TRUE)})
== 1
features[!is.na(condition1) | !is.na(condition2), ]
condition1 <- sapply(features$NAME,
f <- function(x){grep('-mean()',
x,
fixed = TRUE)}) == 1
condition2 <- sapply(features$NAME,
f <- function(x){grep('std()',
x,
fixed = TRUE)}) == 1
features <- features[!is.na(condition1) | !is.na(condition2), ]
x <- X[features$ID]
colnames(x)
fileName <- "features.txt"
fileName <- paste(dataDir, fileName, sep = '/')
features <- read.table(fileName, col.names = colNames)
##Extract only the measurements on the mean and standard deviation
##for each measurement.
condition1 <- sapply(features$NAME,
f <- function(x){grep('-mean()',
x,
fixed = TRUE)}) == 1
condition2 <- sapply(features$NAME,
f <- function(x){grep('std()',
x,
fixed = TRUE)}) == 1
mainFeatures <- features[!is.na(condition1) | !is.na(condition2), ]
View(X)
fileName <- "features.txt"
colNames <- c("ID", "NAME")
fileName <- paste(dataDir, fileName, sep = '/')
features <- read.table(fileName, col.names = colNames)
##Extract only the measurements on the mean and standard deviation
##for each measurement.
condition1 <- sapply(features$NAME,
f <- function(x){grep('-mean()',
x,
fixed = TRUE)}) == 1
condition2 <- sapply(features$NAME,
f <- function(x){grep('std()',
x,
fixed = TRUE)}) == 1
mainFeatures <- features[!is.na(condition1) | !is.na(condition2), ]
dataDir <- "./UCI HAR Dataset"
fileName <- "activity_labels.txt"
fileName <- paste(dataDir, fileName, sep = '/')
colNames <- c("ID", "NAME")
activityLabels <- read.table(fileName, col.names = colNames)
fileName <- "features.txt"
colNames <- c("ID", "NAME")
fileName <- paste(dataDir, fileName, sep = '/')
features <- read.table(fileName, col.names = colNames)
##Extract only the measurements on the mean and standard deviation
##for each measurement.
condition1 <- sapply(features$NAME,
f <- function(x){grep('-mean()',
x,
fixed = TRUE)}) == 1
condition2 <- sapply(features$NAME,
f <- function(x){grep('std()',
x,
fixed = TRUE)}) == 1
mainFeatures <- features[!is.na(condition1) | !is.na(condition2), ]
##Getting data
get_data <- function(type){
#activity
fileName <- paste('Y', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- "acivityID"
Y <- read.table(fileName, col.names = colNames)
#subject
fileName <- paste('subject', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- "subject"
subject <- read.table(fileName, col.names = colNames)
#data
fileName <- paste('X', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- as.array(features$NAME)
X <- read.table(fileName, col.names = colNames)
X <- X[mainFeatures$ID]
cbind(subject, Y, X)
}
data_test <- get_data('test')
data_train <- get_data('train')
data <- rbind(data_test, data_train)
colnames(data)
head(data$acivityID)
activityLabels$NAME[activityLabels$ID = 5]
activityLabels$NAME[activityLabels$ID == 5]
head(sapply(data$acivityID, f <- function(x){activityLabels$NAME[activityLabels$ID == x]})
)
)
head(sapply(data$acivityID, f <- function(x){activityLabels$NAME[activityLabels$ID == x]}))
sapply(data$acivityID, f <- function(x){activityLabels$NAME[activityLabels$ID == x]})
data$activity <- sapply(data$acivityID, f <- function(x){activityLabels$NAME[activityLabels$ID == x]})
str(data$activity)
data$activity
rm(data$activity)
data$activity <- c()
data$activity <- sapply(data$acivityID, f <- function(x){activityLabels$NAME[activityLabels$ID == x]})
names(Y)
install.packages('plyr')
data[data$subject == 1 & data$acivityID = 1, 3:4]
data[data$subject == 1 & data$acivityID == 1, 3:4]
install.packages("dplyr")
library(plyr)
library(dplyr)
data_train <- merge(subject, Y, X)
data_train <- join(subject, Y, X)
fileName <- paste('Y', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- "acivityID"
Y <- read.table(fileName, col.names = colNames)
Y <- sapply(Y$acivityID, f <- function(x){
activityLabels$NAME[activityLabels$ID == x]})
names(Y) <- "activity"
head(Y)
Y
fileName <- paste('Y', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- "acivityID"
Y <- read.table(fileName, col.names = colNames)
mutate(Y, activityID <- activityLabels$NAME[activityLabels$ID == activityID])
mutate(Y, acivityID <- activityLabels$NAME[activityLabels$ID == acivityID])
mutate(Y, acivityID = activityLabels$NAME[activityLabels$ID == acivityID])
mutate(Y, acivityID = as.character(activityLabels$NAME[activityLabels$ID == acivityID]))
mutate(Y, acivityID = f <- function(acivityID){
activityLabels$NAME[activityLabels$ID == x]}))
mutate(Y, acivityID = f <- function(acivityID){
activityLabels$NAME[activityLabels$ID == x]})
mutate(Y, acivityID = function(acivityID){
activityLabels$NAME[activityLabels$ID == x]})
data_train[1,2]
data_train[2,2]
data_train <- sapply(data_train$acivityID, f <- function(x){
activityLabels$NAME[activityLabels$ID == x]})
data_train[2,2]
#activity
fileName <- paste('Y', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- "activityID"
Y <- read.table(fileName, col.names = colNames)
##mutate(Y, activityID <- activityLabels$NAME[activityLabels$ID == activityID])
##Y <- sapply(Y$acivityID, f <- function(x){
##                        activityLabels$NAME[activityLabels$ID == x]})
##rename(Y, activityID <- activity)
#subject
fileName <- paste('subject', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- "subject"
subject <- read.table(fileName, col.names = colNames)
#data
fileName <- paste('X', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- as.array(features$NAME)
X <- read.table(fileName, col.names = colNames)
X <- X[mainFeatures$ID]
data_train <- cbind(subject, Y, X)
Y$activityID <- sapply(Y$acivityID, f <- function(x){
activityLabels$NAME[activityLabels$ID == x]})
data_train$activityID <- sapply(data_train$acivityID, f <- function(x){
activityLabels$NAME[activityLabels$ID == x]})
data_train$activity <- sapply(data_train$acivityID, f <- function(x){
activityLabels$NAME[activityLabels$ID == x]})
data_train$activity = sapply(data_train$acivityID, f <- function(x){
activityLabels$NAME[activityLabels$ID == x]})
sapply(Y$acivityID, f <- function(x){
activityLabels$NAME[activityLabels$ID == x]})
sapply(Y$acivity, f <- function(x){
activityLabels$NAME[activityLabels$ID == x]})
head(Y)
sapply(Y$activityID, f <- function(x){
activityLabels$NAME[activityLabels$ID == x]})
Y$activityID <- sapply(Y$activityID, f <- function(x){
activityLabels$NAME[activityLabels$ID == x]})
head(Y)
str(Y)
levels(Y)
level(Y)
factor(Y)
Y <- sapply(Y$activityID, f <- function(x){
activityLabels$NAME[activityLabels$ID == x]})
Y <- read.table(fileName, col.names = colNames)
fileName <- paste('Y', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- "activityID"
Y <- read.table(fileName, col.names = colNames)
##mutate(Y, activityID <- activityLabels$NAME[activityLabels$ID == activityID])
Y$activityID <- sapply(Y$activityID, f <- function(x){
activityLabels$NAME[activityLabels$ID == x]})
rename(Y, activityID <- activity)
rename(Y, activityID <- activity)
rename(Y, activityID = activity)
rename(Y, activityID = 'activity')
rename(Y, activity = activityID)
grData <- group_by(data, subject, activity)
head(grData[,1:5])
summarise(grData, mean())
head(tapply(data, c(3,4), mean)
)
head(tapply(data, c(3,4), mean())
)
summarise(grData, mean
)
summarise(grData)
summarise(grData, mean(grData[,3:]))
summarise(grData, mean(grData[,3:10]))
summarise(grData, tBodyAcc.mean...X = mean(tBodyAcc.mean...X))
?sumarise_each()
?summarise_each()
summarise_each(grData, mean)
summarise_each(grData, mean())
summarise_each(grData, funs(mean))
grData <- summarise_each(grData, funs(mean))
library(plyr)
library(dplyr)
dataDir <- "./UCI HAR Dataset"
fileName <- "activity_labels.txt"
fileName <- paste(dataDir, fileName, sep = '/')
colNames <- c("ID", "NAME")
activityLabels <- read.table(fileName, col.names = colNames)
fileName <- "features.txt"
colNames <- c("ID", "NAME")
fileName <- paste(dataDir, fileName, sep = '/')
features <- read.table(fileName, col.names = colNames)
##Extract only the measurements on the mean and standard deviation
##for each measurement.
condition1 <- sapply(features$NAME,
f <- function(x){grep('-mean()',
x,
fixed = TRUE)}) == 1
condition2 <- sapply(features$NAME,
f <- function(x){grep('std()',
x,
fixed = TRUE)}) == 1
mainFeatures <- features[!is.na(condition1) | !is.na(condition2), ]
##Getting data
get_data <- function(type){
#activity
fileName <- paste('Y', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- "activityID"
Y <- read.table(fileName, col.names = colNames)
##mutate(Y, activityID <- activityLabels$NAME[activityLabels$ID == activityID])
Y$activityID <- sapply(Y$activityID, f <- function(x){
activityLabels$NAME[activityLabels$ID == x]})
Y <- rename(Y, activity, activityID)
#subject
fileName <- paste('subject', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- "subject"
subject <- read.table(fileName, col.names = colNames)
#data
fileName <- paste('X', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- as.array(features$NAME)
X <- read.table(fileName, col.names = colNames)
X <- X[mainFeatures$ID]
data_train <- cbind(subject, Y, X)
}
data_test <- get_data('test')
data_train <- get_data('train')
data <- rbind(data_test, data_train)
grData <- group_by(data, subject, activity)
grData <- summarise_each(grData, funs(mean))
get_data <- function(type){
#activity
fileName <- paste('Y', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- "activityID"
Y <- read.table(fileName, col.names = colNames)
##mutate(Y, activityID <- activityLabels$NAME[activityLabels$ID == activityID])
Y$activityID <- sapply(Y$activityID, f <- function(x){
activityLabels$NAME[activityLabels$ID == x]})
Y <- rename(Y, activity, activityID)
#subject
fileName <- paste('subject', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- "subject"
subject <- read.table(fileName, col.names = colNames)
#data
fileName <- paste('X', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- as.array(features$NAME)
X <- read.table(fileName, col.names = colNames)
X <- X[mainFeatures$ID]
data_train <- cbind(subject, Y, X)
}
library(plyr)
library(dplyr)
dataDir <- "./UCI HAR Dataset"
fileName <- "activity_labels.txt"
fileName <- paste(dataDir, fileName, sep = '/')
colNames <- c("ID", "NAME")
activityLabels <- read.table(fileName, col.names = colNames)
fileName <- "features.txt"
colNames <- c("ID", "NAME")
fileName <- paste(dataDir, fileName, sep = '/')
features <- read.table(fileName, col.names = colNames)
##Extract only the measurements on the mean and standard deviation
##for each measurement.
condition1 <- sapply(features$NAME,
f <- function(x){grep('-mean()',
x,
fixed = TRUE)}) == 1
condition2 <- sapply(features$NAME,
f <- function(x){grep('std()',
x,
fixed = TRUE)}) == 1
mainFeatures <- features[!is.na(condition1) | !is.na(condition2), ]
data_test <- get_data('test')
data_train <- get_data('train')
get_data <- function(type){
#activity
fileName <- paste('Y', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- "activityID"
Y <- read.table(fileName, col.names = colNames)
##mutate(Y, activityID <- activityLabels$NAME[activityLabels$ID == activityID])
Y$activityID <- sapply(Y$activityID, f <- function(x){
activityLabels$NAME[activityLabels$ID == x]})
Y <- rename(Y, activity = activityID)
#subject
fileName <- paste('subject', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- "subject"
subject <- read.table(fileName, col.names = colNames)
#data
fileName <- paste('X', type, sep = '_')
fileName <- paste(fileName, 'txt', sep = '.')
fileName <- paste(dataDir, type, fileName, sep = '/')
colNames <- as.array(features$NAME)
X <- read.table(fileName, col.names = colNames)
X <- X[mainFeatures$ID]
data_train <- cbind(subject, Y, X)
}
data_test <- get_data('test')
data_train <- get_data('train')
data <- rbind(data_test, data_train)
grData <- group_by(data, subject, activity)
grData <- summarise_each(grData, funs(mean))
write.table(grData, file = 'grouped_data.txt', row.name=FALSE)
grep('std()', 'asfdastd()', fixed = TRUE)
grep('std()', 'asfdastd()', fixed = TRUE) > 0
grep('std()', 'asfdast()', fixed = TRUE) > 0
grep('std()', 'asfdast()', fixed = TRUE) + grep('std()', 'asfdastd()', fixed = TRUE)
grepl('std()', 'asfdast()', fixed = TRUE)
grepl('std()', 'asfdastd()', fixed = TRUE)
f <- function(x){
grepl('-mean()', x, fixed = TRUE) | grepl('std()', x, fixed = TRUE)
}
mainFeatures <- features[sapply(features$NAME, f), ]
source('run_analysis.R')
source('run_analysis.R')
run_analysis()
source('run_analysis.R')
run_analysis()
savehistory("~/repos/jhu-getting-and-cleaning-data/CourseProject/.Rhistory")
