getwd()
setwd("Courses/jhu-getting-and-cleaning-data/week3/")
if(!file.exists("./data")){dir.create(("./data"))}
ls
ls()
fileUrl <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "./data/restaurants.csv", mode = "wd")
save.image("~/Courses/jhu-getting-and-cleaning-data/week3/.RData")
savehistory("~/Courses/jhu-getting-and-cleaning-data/week3/.RHistory")
load("~/Courses/jhu-getting-and-cleaning-data/week3/.RData")
download.file(fileUrl, destfile = "./data/restaurants.csv", mode = "wb")
restData <- read.csv("./data/restaurants.csv")
head(restData)
head(restData)
summary(restData)
str(restData)
install.packages("plyr")
library(plyr)
install.packages("dplyr")
library(dplyr)
chicago <- readRDS("chicago.rds")
chicago
fileUrl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
housing <- download.file(fileUrl1, destfile = "./data/housing.csv", mode = "wb")
names(housing)
str(housing)
housing <- read.csv("./data/housing.csv")
agricultureLogical <- housing$ACR == 3 & housing$AGS == 6
agricultureLogical <- housing$ACR == 3 & housing$AGS == 6 & !is.na(housing$ACR) & !is.na(housing$AGS)
HEAD(which(agricultureLogical))
head(which(agricultureLogical))
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileUrl2, destfile = "./data/image.jpg")
install.packages("jpeg")
library(jpeg)
imageJeff <- readJPEG("./data/image.jpg", native = TRUE)
download.file(fileUrl2, destfile = "./data/image.jpg", mode = "wb")
imageJeff <- readJPEG("./data/image.jpg", native = TRUE)
str(imageJeff)
?jpeg
?nativeRaster
?imageJeff
??imageJeff
imageJeff[c(30, 60)]
imageJeff[c(30, 80)]
imageJeff
imageJeff[30, 80]
quantile(imageJeff)
quantile(imageJeff, c(30, 80))
quantile(imageJeff, probs = c(30, 80))
quantile(imageJeff, probs = c(0, 30, 80, 100))
quantile(imageJeff)
quantile(imageJeff, probs = c(.30, .80))
gdp <- read.csv("./data/GDP.csv")
edstats <- read.csv("./data/EDSTATS_Country.csv")
?merge
names(edstats)
intersect(names(edstats), names(gdp))
names(gdp)
head(gdp, n = 3)
head(gdp, n = 4)
head(gdp, n = 6)
head(gdp, n = 10)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "./data/gdp.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "./data/gdp.csv", mode = "wb")
gdp <- read.csv("./data/GDP.csv")
head(gdp)
all(is.na(gdp$X.5))
all(is.na(gdp$X.6))
all(is.na(gdp$X.4))
all(is.na(gdp$X.7))
all(is.na(gdp$X.8))
names(edstats)
merge(edstats, gdp, by.x = "ContryCode", by.y = "X", all = TRUE)
gdp[!is.na(gdp$X),]
gdp1 <- gdp[!is.na(gdp$X),]
head(gdp1)
gdp1$X[1]
gdp1$Gross.domestic.product.2012[1]
gdp1$X.1[1]
gdp$X.1[1]
gdp$X.1[2]
gdp$X.1[3]
gdp$X.1[6]
gdp$X.1[5]
gdp$X.1[100]
gdp$X[100]
gdp$X[1]
type(gdp$X[1])
is.null(gdp$X[1])
is.empty.model(gdp$X[1])
is.character(gdp$X[1])
is.na(gdp$X[1])
length(gdp$X[1])
length(gdp$X[1] == ' ')
gdp$X[1] == ' '
gdp$X[1] == ''
gdp1 <- gdp[!is.na(gdp$X) & gdp$X != '',]
head(gdp1)
tail(gdp1)
is.na(gdp1$X.1)
gdp1 <- select(gdp1, -c(X.1, X.5, X.6, X.7, X.8))
head(gdp1)
all(gdp1$X.4 == '')
all(gdp1$X.4 == '' | is.na(gdp1$X.4))
head(gdp)
head(gdp[gdp$X.4 != ''])
head(gdp[gdp$X.4 != '',])
str(gdp)
head(edstats)
names(gdp)
names(gdp)[1]
names(gdp)[1] <- "CountryCode"
merger(gdp, edstats)
merge(gdp, edstats)
head(merge(gdp, edstats))
intersect(gdp$CountryCode, edstats$CountryCode)
commonCC <- intersect(gdp$CountryCode, edstats$CountryCode)
length(commonCC)
mergedData <- merge(gdp, edstats)
commonCC[order(commonCC)]
match(gdp$CountryCode, edstats$CountryCode)
length(!is.na(match(gdp$CountryCode, edstats$CountryCode)))
length(gdp$CountryCode[!is.na(match(gdp$CountryCode, edstats$CountryCode))])
gdp <- read.csv("./data/GDP.csv")
length(gdp$CountryCode[!is.na(match(gdp$CountryCode, edstats$CountryCode))])
length(gdp$CountryCode[!is.na(match(edstats$CountryCode, gdp$X))])
length(gdp$CountryCode[!is.na(match(edstats$CountryCode, gdp$X))])
head(gdp$X)
intersect(gdp$X, edstats$CountryCode)
length(intersect(gdp$X, edstats$CountryCode))
commonCC[order(commonCC)]
commonCC[order(commonCC)][13]
head(gdp)
gdp1
gdp1 <- gdp1[gdp1$Gross.domestic.product.2012 != '']
gdp1 <- gdp1[gdp1$Gross.domestic.product.2012 != '',]
gdp1[order(gdp1$Gross.domestic.product.2012, decreasing = TRUE)]
gdp1[order(gdp1$Gross.domestic.product.2012, decreasing = TRUE), 2]
gdp1[order(gdp1$Gross.domestic.product.2012, decreasing = TRUE), "Gross.domestic.product.2012"]
gdp1[order(gdp1$Gross.domestic.product.2012, decreasing = TRUE), "X"]
gdp1[order(gdp1$Gross.domestic.product.2012, decreasing = TRUE), "X"][13]
edstats$CountryCode
names(gdp1)[1] <- "CountryCode"
names(gdp1)
names(gdp1)[2] <- "GDP"
head(gdp1)
names(edstats)
names(gdp1)[3] <- "Long.Name"
names(gdp1)[2] <- "Rank"
names(gdp1)[4] <- "GDP"
head(gdp1)
head(merge(gdp1, edstats, by.x = CountryCode))
head(merge(gdp1, edstats, by.x = 'CountryCode''))
''
head(merge(gdp1, edstats, by.x = 'CountryCode'))
head(merge(gdp1, edstats, by.x = 'CountryCode', by.y = 'CountryCode'))
mergedData <- merge(gdp1, edstats, by.x = 'CountryCode', by.y = 'CountryCode')
mergedData[,1:4]
head(mergedData[,1:4])
mergedData[,1:4][order(mergedData$Rank, decreasing = FALSE)]
mergedData[,1:4][order(mergedData$Rank, decreasing = FALSE),]
mergedData$Rank <- as.numeric(mergedData$Rank)
mergedData[,1:4][order(mergedData$Rank, decreasing = FALSE),]
mergedData[,1:4][order(mergedData$Rank, decreasing = TRUE),]
mergedData[,1:4][order(mergedData$Rank, decreasing = TRUE),][13]
mergedData$Rank[order(mergedData$Rank, decreasing = TRUE),13]
mergedData$Rank[order(mergedData$Rank, decreasing = TRUE),]
mergedData$Rank[order(mergedData$Rank, decreasing = TRUE)]
mergedData$Rank[order(mergedData$Rank, decreasing = TRUE)][13]
mergedData$Long.Name.x[order(mergedData$Rank, decreasing = TRUE)][13]
length(commonCC)
length(gdp1)
dim(gdp1)
intersect(gdp1$CountryCode, edstats$CountryCode)
head(gdp1)
gdp1$Long.Name[order(gdp1$Rank, decreasing = TRUE)][13]
gdp1$RankName[order(gdp1$Rank, decreasing = TRUE)]
gdp1$Rank[order(gdp1$Rank, decreasing = TRUE)]
gdp1$Rank <- as.numeric(gdp1$Rank)
gdp1$Rank[order(gdp1$Rank, decreasing = TRUE)]
head(gdp)
gdp[5,2]
as.numberic(gdp[5,2])
as.numeric(gdp[5,2])
as.character(gdp[5,2])
as.numberic(as.character(gdp[5,2]))
as.numeric(as.character(gdp[5,2]))
gdp$Gross.domestic.product.2012 <- as.character(gdp$Gross.domestic.product.2012)
head(gdp)
as.numeric(gdp$Gross.domestic.product.2012)
gdp$Gross.domestic.product.2012 <- as.numeric(gdp$Gross.domestic.product.2012)
gdp <- gdp[!is.na(gdp$Gross.domestic.product.2012),]
head(gdp)
names(gdp)[1:5] < c("CountryCode", "Rank", "x.1", "Long.Name", "GDP")
names(gdp)[1:5] <- c("CountryCode", "Rank", "x.1", "Long.Name", "GDP")
gdp[]
mergedData <- merge(gdp, edstats, by.x = "CountryCode", by.y = "CountryCode")
mergedData$CountryCode[order(mergedData$Rank, decreasing = TRUE)]
mergedData$CountryCode[order(mergedData$Rank, decreasing = TRUE)][13]
mergedData$Long.Name.x[order(mergedData$Rank, decreasing = TRUE)][13]
length(mergedData$CountryCode)
names(mergedData)
dim(mergedData)
mergedData$Income.Group
group_by(mergedData, Income.Group)
group_by(mergedData, Income.Group)$Rank
incomeGroupBy <- group_by(mergedData, Income.Group)
summarise(incomeGroupBy, Rank = mean(Rank))
quantile(mergedData$Rank, 5)
cut(mergedData$Rank, 5)
cut2(mergedData$Rank, 5)
install.packages("Hmisc")
library(Hmisc)
cut2(mergedData$Rank, 5)
cut2(mergedData$Rank, g = 5)
mergedData$RankGroups <- cut2(mergedData$Rank, g = 5)
table(mergedData$RankGroups)
table(mergedData$RankGroups, mergedData$Income.Group)
save.image("~/Courses/jhu-getting-and-cleaning-data/week3/.RData")
savehistory("~/Courses/jhu-getting-and-cleaning-data/week3/.RHistory")
